# Production configuration file.

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="QUrWX<G3acQDG^eVF]Z:twfv]ejFd:<MbNbRmYEL?4B/vDl[VpA/qWarcN=8_Evw"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.

application.global=pwguard.global.Global

session {
  cookieName: "pwguard-session"

  timeout: 30 minutes
}

csrf.cookie.name: "XSRF-TOKEN" # what AngularJS wants

# Thread pool contexts. See
# https://www.playframework.com/documentation/2.3.x/ThreadPools
contexts {
  db {
    fork-join-executor {
      parallelism-factor = 10.0
      parallelism-max = 100
    }
  }
}

# Cache stuff
http.cacheStaticResources: true
ehcacheplugin: disabled # We're using Memcache, by default
memcached.host: "127.0.0.1:11211"


# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Local setting. If true, ensure that forwarded request was originally
# via SSL.
ensureSSL: true

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
use_db: default

db {
  default {
    url: "jdbc:sqlite:pwg.db"
    driver: "org.sqlite.JDBC"
    username: ""
    password: ""
  }
}

# Akka configuration
# ~~~~~

akka {
  log-dead-letters: 0
  log-dead-letters-during-shutdown: off
}
